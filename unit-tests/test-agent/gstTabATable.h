/*
 * Note: this file originally auto-generated by mib2c using
 *       version : 14170 $ of $
 *
 * $Id:$
 */
#ifndef GSTTABATABLE_H
#define GSTTABATABLE_H

#ifdef __cplusplus
extern          "C" {
#endif


/** @addtogroup misc misc: Miscellaneous routines
 *
 * @{
 */
#include <net-snmp/library/asn1.h>

    /*
     * other required module components 
     */
    /* *INDENT-OFF*  */
config_add_mib(GUILE-SNMP-TEST-MIB)
config_require(GUILE-SNMP-TEST-MIB/gstTabATable/gstTabATable_interface)
config_require(GUILE-SNMP-TEST-MIB/gstTabATable/gstTabATable_data_access)
config_require(GUILE-SNMP-TEST-MIB/gstTabATable/gstTabATable_data_get)
config_require(GUILE-SNMP-TEST-MIB/gstTabATable/gstTabATable_data_set)
    /* *INDENT-ON*  */

    /*
     * OID and column number definitions for gstTabATable 
     */
#include "gstTabATable_oids.h"

    /*
     * enum definions 
     */
#include "gstTabATable_enums.h"

    /*
     *********************************************************************
     * function declarations
     */
    void            init_gstTabATable(void);
    void            shutdown_gstTabATable(void);

    /*
     *********************************************************************
     * Table declarations
     */
/**********************************************************************
 **********************************************************************
 ***
 *** Table gstTabATable
 ***
 **********************************************************************
 **********************************************************************/
    /*
     * GUILE-SNMP-TEST-MIB::gstTabATable is subid 3 of gstMibObjects.
     * Its status is Current.
     * OID: .1.3.6.1.3.1977.1.3, length: 8
     */
    /*
     *********************************************************************
     * When you register your mib, you get to provide a generic
     * pointer that will be passed back to you for most of the
     * functions calls.
     *
     * TODO:100:r: Review all context structures
     */
    /*
     * TODO:101:o: |-> Review gstTabATable registration context.
     */
    typedef netsnmp_data_list gstTabATable_registration;

/**********************************************************************/
    /*
     * TODO:110:r: |-> Review gstTabATable data context structure.
     * This structure is used to represent the data for gstTabATable.
     */
    /*
     * This structure contains storage for all the columns defined in the
     * gstTabATable.
     */
    typedef struct gstTabATable_data_s {

        /*
         * gstTabAData(2)/DisplayString/ASN_OCTET_STR/char(char)//L/A/w/e/R/d/H
         */
        char            gstTabAData[255];
        size_t          gstTabAData_len;        /* # of char elements, not bytes */

    } gstTabATable_data;


    /*
     * TODO:120:r: |-> Review gstTabATable mib index.
     * This structure is used to represent the index for gstTabATable.
     */
    typedef struct gstTabATable_mib_index_s {

        /*
         * gstTabAIndex(1)/INTEGER32/ASN_INTEGER/long(long)//l/A/w/e/R/d/h
         */
        long            gstTabAIndex;


    } gstTabATable_mib_index;

    /*
     * TODO:121:r: |   |-> Review gstTabATable max index length.
     * If you KNOW that your indexes will never exceed a certain
     * length, update this macro to that length.
     */
#define MAX_gstTabATable_IDX_LEN     1


    /*
     *********************************************************************
     * TODO:130:o: |-> Review gstTabATable Row request (rowreq) context.
     * When your functions are called, you will be passed a
     * gstTabATable_rowreq_ctx pointer.
     */
    typedef struct gstTabATable_rowreq_ctx_s {

    /** this must be first for container compare to work */
        netsnmp_index   oid_idx;
        oid             oid_tmp[MAX_gstTabATable_IDX_LEN];

        gstTabATable_mib_index tbl_idx;

        gstTabATable_data data;

        /*
         * flags per row. Currently, the first (lower) 8 bits are reserved
         * for the user. See mfd.h for other flags.
         */
        u_int           rowreq_flags;

        /*
         * TODO:131:o: |   |-> Add useful data to gstTabATable rowreq context.
         */

        /*
         * storage for future expansion
         */
        netsnmp_data_list *gstTabATable_data_list;

    } gstTabATable_rowreq_ctx;

    typedef struct gstTabATable_ref_rowreq_ctx_s {
        gstTabATable_rowreq_ctx *rowreq_ctx;
    } gstTabATable_ref_rowreq_ctx;

    /*
     *********************************************************************
     * function prototypes
     */
    int             gstTabATable_pre_request(gstTabATable_registration *
                                             user_context);
    int             gstTabATable_post_request(gstTabATable_registration *
                                              user_context, int rc);

    int             gstTabATable_rowreq_ctx_init(gstTabATable_rowreq_ctx *
                                                 rowreq_ctx,
                                                 void *user_init_ctx);
    void            gstTabATable_rowreq_ctx_cleanup(gstTabATable_rowreq_ctx
                                                    * rowreq_ctx);


    gstTabATable_rowreq_ctx
        *gstTabATable_row_find_by_mib_index(gstTabATable_mib_index *
                                            mib_idx);

    extern oid      gstTabATable_oid[];
    extern int      gstTabATable_oid_size;


#include "gstTabATable_interface.h"
#include "gstTabATable_data_access.h"
#include "gstTabATable_data_get.h"
#include "gstTabATable_data_set.h"

    /*
     * DUMMY markers, ignore
     *
     * TODO:099:x: *************************************************************
     * TODO:199:x: *************************************************************
     * TODO:299:x: *************************************************************
     * TODO:399:x: *************************************************************
     * TODO:499:x: *************************************************************
     */

#ifdef __cplusplus
}
#endif
#endif                          /* GSTTABATABLE_H */
/** @} */
