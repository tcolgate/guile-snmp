#!/usr/bin/guile -s
!#
;;-------------------------------------------------------------------
;; Copyright (C) 2009,2010 Tristan Colgate 
;;
;; find-host-on-port: a more complicated example script 
;;
;;-------------------------------------------------------------------

;This is done purely to help us find our own module for purposes of (help)
(set! %load-path (cons "/usr/local/bin" %load-path))

(use-modules (srfi srfi-37))
(use-modules (ice-9 threads))
(use-modules (ice-9 format))
(use-modules (ice-9 common-list))
(use-modules (ice-9 session))
(putenv "MIBS=all")
(use-modules (snmp reports))
(init-reports)

;;; Commentary:
;;
;;  Usage: find-host-on-port [OPTIONS] switch port
;;    This command finds the IP associated with the hosts
;;  attached to a given switch and port. The port should
;;  be in the Cisco short port anme format (e.g. Gi1/1)
;;
;;; Code:

(define community "public")

; list of l3 routers, this has been removed for confidentiality 
; reasons
(define l3list (list 
                 "192.168.0.254"))


(define (find-host-on-port firstswitch targetname)
  " finds out an ip for any mac address on a given l2 switch port.
   The switch port must be give in the IFName format e.g. Gi1/0/1"
  (session #:host firstswitch #:community community
    (let* ((intname (walk ifName))
           (intid (iid intname)))
      (if (not (equal? (intname) targetname ))
        ((fail))
        (begin
          (let* ((intvlan (get-or-fail (+ vmVlan intid)))
                 (vlancomm (string-append community (string-append "@" (number->string (intvlan))))))
            (session #:host firstswitch #:community vlancomm
              (let* ((bportindex (walk dot1dBasePortIfIndex))
                     (bportid (iid bportindex)))
  	        (if (equal? (bportindex) (% 1 intid))
  		  (let* ((bportmac (walk dot1dTpFdbPort))
  			 (mac (iid bportmac)))
  		    (if (equal? (bportmac) (% 1 bportid))
  	              (session #:host ((one-of l3list)) #:community vlancomm
		  	(let* ((l3mac (walk ipNetToMediaPhysAddress ))
		  	       (l3macip (% 2 5 (iid l3mac))))
			  (if (equal? (mac-as-oid (l3mac)) mac)
			    (begin
      	                      (format #t "Switch: ~a Port: ~a ifIndex: ~a vlan: ~a mac: ~a ip: ~a  ~%" firstswitch (intname) intid (intvlan) mac l3macip)
			      (exit))
			    ((fail)))))
		       ((fail)))
		    ((fail)))
	          ((fail)))))))))))

; main
(let ((oplist (list)))
  (args-fold (cdr (program-arguments))
    (let ((display-and-exit-proc (lambda (msg) 
  				 (lambda (opt name arg) 
  				   (display msg)(newline) (quit) (values)))))
      (list (option '(#\v "version") #f #f 
		  (display-and-exit-proc "find-host: version 0.1\n"))
      	    (option '(#\h "help") #f #f 
		  (display-and-exit-proc "Usage: find-host hostname ..."))))
    (lambda (opt name arg)
      (error (format "Unrecognized option `~A'" name)))
    (lambda(op)(string-split op #\:)(newline)(values op)))

; vim: ft=scheme:lisp:autoindent

